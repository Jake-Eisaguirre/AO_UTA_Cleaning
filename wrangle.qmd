---
title: "AO_UTA"
format: html
editor: source
---

## Load Packages
```{r}
# Check if 'librarian' package is installed, if not, install it and load it
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

# Load necessary packages using librarian, ensuring they are installed if missing
librarian::shelf(tidyverse, here, DBI, odbc, readxl, purrr, janitor, lubridate)
```

## File Path for Data
```{r}

static_data_2024 <- "D:/StaffPlanner/Rosare/UTA Data/ME Final"

static_data_2023 <- "D:/StaffPlanner/Rosare/UTA Data/ME Final/Archive"

dynamic_data <- " "


```

## Loop through Static 2024 Data
```{r}

# List all valid .xlsx files, excluding temporary and hidden files
static_files_2024 <- list.files(static_data_2024, pattern = "^[^~].*\\.xlsx$", full.names = TRUE)

# Read and combine all .xlsx files
static_combined_data_2024 <- static_files_2024 %>%
  lapply(read_excel) %>%           # Read each Excel file into a list of data frames
  bind_rows()                      # Combine all data frames into a single data frame

static_combined_data_2024 <- static_combined_data_2024 %>% 
  select(!c("1"))

```

## Loop through Static 2023 Data
```{r}


# List all valid .xlsx files, excluding temporary and hidden files
static_files_2023 <- list.files(static_data_2023, pattern = "^[^~].*\\.xlsx$", full.names = TRUE)

read_excel_uniform <- function(file) {
  read_excel(file, col_types = "guess") %>%
    mutate(`Work Detail Hours` = as.numeric(`Work Detail Hours`),
           `Dept` = as.numeric(`Dept`),
           `Project Code` = as.numeric(`Project Code`))  # Ensure numeric type
}


# Read and combine all .xlsx files
static_combined_data_2023 <- static_files_2023 %>%
  map(read_excel_uniform) %>%  # Read each file with the helper function
  bind_rows()                        # Combine all data frames into a single data frame


```

## Combine both 2023 and 2024 Static
```{r}

raw_static_data <- rbind(static_combined_data_2024, static_combined_data_2023) %>% 
  clean_names() %>% 
  arrange(work_summary_work_date)

```

## Clean up static data
```{r}

clean_static_data <- raw_static_data %>% 
  mutate(
    # Clean and parse the work_summary_work_date
    work_summary_work_date = str_squish(work_summary_work_date),
    work_summary_work_date = str_sub(work_summary_work_date, 1, 11),
    work_summary_work_date = str_squish(work_summary_work_date),
    work_summary_work_date = mdy(work_summary_work_date),
    work_summary_work_date_formatted = format(work_summary_work_date, "%Y-%m-%d"),
    
    # Parse start and end times to ISO 8601
    work_summary_start_time = format(mdy_hm(work_summary_start_time), "%Y-%m-%dT%H:%M:%S"),
    work_summary_end_time = format(mdy_hm(work_summary_end_time), "%Y-%m-%dT%H:%M:%S"),
    work_detail_start_time = format(mdy_hm(work_detail_start_time), "%Y-%m-%dT%H:%M:%S"),
    work_detail_end_time = format(mdy_hm(work_detail_end_time), "%Y-%m-%dT%H:%M:%S"),
    
    # Create year_month column
    year_month = format(work_summary_work_date, "%Y-%m")
  ) %>% 
  # Remove unwanted columns
  select(!c(work_summary_work_date_formatted, filter_date)) %>% 
  relocate(year_month, .after = work_summary_work_date)

```

## Write back to Mels folder
```{r}

date <- Sys.Date()

date <- str_remove_all(date, "-")
  

write_csv(clean_static_data, paste0("D:/StaffPlanner/Rosare/UTA Data/ME Final/All_Combined_Static/All_Combined_Static", date, ".csv"))


```
